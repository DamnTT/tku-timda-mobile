#!/usr/bin/env python3
# -*- coding: utf-8 -*-
PACKAGE = "strategy"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
#------------------------------------------------------------------------------------
# Game Start
#------------------------------------------------------------------------------------
gen.add("GAME_START",    bool_t,    0, "A Boolen parameter",  False)

#------------------------------------------------------------------------------------
# Robot mode
#------------------------------------------------------------------------------------
mode_enum = gen.enum([ gen.const("IDLE",         str_t, "idle",         "robot is at ide mode"),
                       gen.const("SETTING",      str_t, "Setting",      "Setting the robot"),
                       gen.const("NAVIGATING",   str_t, "Navigating",   "the robot start to navagate"),
                       gen.const("TEST",  str_t, "test",  "test the robot route"), 
                      #  gen.const("QGA",  str_t, "QGA",  "calculate the robot route"),
                       gen.const("SERVICE",  str_t, "Service",  "Servie the customer")], "An enum to set mode")
gen.add("ROBOT_MODE", str_t, 0, "Select Game mode", "idle", edit_method = mode_enum)



#------------------------------------------------------------------------------------
# item_list
#------------------------------------------------------------------------------------
item_enum = gen.enum([ gen.const( "initial",   str_t, "initial"   ,""),  
                       gen.const( "花雕酸菜牛肉麵",   str_t,  "00"  ,""),
                       gen.const( "茶葉蛋",   str_t,   "01",""),
                       gen.const( "奮起湖便當",   str_t,   "02",""),
                       gen.const( "現蒸地瓜",   str_t,   "03",""),
                       gen.const( "純喫茶",   str_t,   "04",""),
                       gen.const( "花蓮新城佳興檸檬汁",   str_t,   "05",""),
                       gen.const( "約翰走路12年300ml",   str_t,   "06",""),
                       gen.const( "御料小館韓式風味炸雞",   str_t,   "07",""),
                       gen.const( "熊熊軟糖",   str_t,   "08",""),
                       gen.const( "光泉米漿",   str_t,   "09",""),
                       gen.const( "義美豆奶",   str_t,   "10",""),
                       gen.const( "鹼性離子水",   str_t,   "11",""),
                       gen.const( "麥香奶茶",          str_t,   "12",""),
                       gen.const( "超柔抽取式衛生紙",    str_t,   "13",""),
                       gen.const( "養樂多",            str_t,   "14",""),
                       gen.const( "御飯糰",            str_t,   "15",""),
                       gen.const( "日本蕎麥風味麵",      str_t,   "16",""),
                       gen.const( "關東煮",            str_t,   "17",""),
                       gen.const( "七七乳加巧克力",      str_t,   "18",""),
                       gen.const( "爪哇咖喱飯",         str_t,   "19",""),
                       gen.const( "小美冰淇淋",         str_t,   "20","")], "An item enum")
gen.add("ITEM", str_t,    0, "Select the item u want to go", "00", edit_method = item_enum)

#------------------------------------------------------------------------------------
# setting option
#------------------------------------------------------------------------------------
gen.add("LOC_GET",    bool_t,    0, "A Boolen parameter",  False)
gen.add("LOC_RESET",     bool_t,    0, "A Boolen parameter",  False)
#------------------------------------------------------------------------------------
# nav_option
#------------------------------------------------------------------------------------
nav_mode_enum = gen.enum([  gen.const("test",        str_t, "test",             ""),
                       gen.const("directory",         str_t, "directory",         "")], "An naav mode enum")
gen.add("NAV_MODE", str_t, 0, "Select the nav mode", "directory", edit_method = nav_mode_enum)
gen.add("NAV_START",    bool_t,    0, "A Boolen parameter",  False)
gen.add("NAV_STOP",    bool_t,    0, "A Boolen parameter",  False)
gen.add("YAML_SAVE",    bool_t,    0, "A Boolen parameter",  False)
gen.add("YAML_LOAD",    bool_t,    0, "A Boolen parameter",  False)
exit(gen.generate(PACKAGE, "strategy", "Robot"))






# gen.add("game_start",    int_t,    0, "An Integer parameter", 50,  0, 100)
# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)



